"""
Django settings for client_service project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from urllib.parse import urlparse
import requests
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-hhkp)t0+jcdw9sqh1dc6%h&jl(_#t4j6fjp0lne%g+j+yl0v%d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True



def get_ngrok_url():
    try:
        response = requests.get("http://ngrok:4040/api/tunnels")
        # Debug: print the response text
        print("Response from ngrok API:", response.text)
        data = response.json()
        tunnels = data.get('tunnels', [])
        if tunnels:
            # For simplicity, use the first tunnel's public_url
            return tunnels[0].get('public_url')
        else:
            print("No tunnels found in the response.")
    except Exception as e:
        print("Error fetching ngrok URL:", e)
    return None


NGROK_URL = get_ngrok_url()
SESSION_COOKIE_DOMAIN = urlparse(NGROK_URL).hostname
ALLOWED_HOSTS = [
    #'127.0.0.1',
    'localhost',
    SESSION_COOKIE_DOMAIN,
    #'192.168.0.65'

]


##OAUTH_CLIENT_ID = 'MiVQQMChpMqHh6HjwCeF60ypWemqj3gExnkng3UB'
##OAUTH_CLIENT_SECRET = 'NMcYEz8DTFyF4sx3oRAOyMh1LcfhLhr9Li1tkCb1XRE4KYpCvW6bQbBZwR5pFHBRJCN6wRgx5V6IfMOxGQwALjpEi4A2qA5UIXpt5xF3MhA2Kmc7bVnkTQGgqJwWmjCr'
OAUTH_CLIENT_ID = 'dILPhaNLlqWtxk3GQ4JOUb1spS790BuKbowuaxj3'
OAUTH_CLIENT_SECRET = '8OyqNSEKKIVWIuNBqmuI2Y2EFYeA783tgQ7qBIjkHebP6wkvkKQFwmgedgWbmkgO4GNFN56OvQb175ws1zv2dnH9hqcKT8fD0zhW6eHEXj8wzMDEhIwHoTxefBX4NSdN'



##auth_endpoint = http://127.0.0.1:8000/o/authorize/
##token_endpoint = http://127.0.0.1:8000/o/token/
##redirect_url = http://127.0.0.1:8002/oauth/callback/

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'client_app',
    'django_extensions',
    'sslserver'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'client_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'client_service.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SESSION_COOKIE_SAMESITE = None
SESSION_COOKIE_SECURE =  True

##NGROK_URL = os.environ.get('NGROK_URL', 'http://127.0.0.1')
##SESSION_COOKIE_DOMAIN = urlparse(NGROK_URL).hostname

# Or if necessary, use 'None' (remember to set SESSION_COOKIE_SECURE=True if you do so)
USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')