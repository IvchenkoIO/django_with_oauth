"""
Django settings for client_service project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from urllib.parse import urlparse
import requests
from decouple import config
# ──────────────────────────────────────────────────────────────────────────────
# Base Directory
# ──────────────────────────────────────────────────────────────────────────────
# BASE_DIR points to the project root, used for file paths below
BASE_DIR = Path(__file__).resolve().parent.parent


## ──────────────────────────────────────────────────────────────────────────────
# Security & Debug
# ──────────────────────────────────────────────────────────────────────────────
# SECRET_KEY must be kept secret in production (consider env var)
SECRET_KEY = config('SECRET_KEY')
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


# ──────────────────────────────────────────────────────────────────────────────
# Dynamic Ngrok URL Fetcher
# ──────────────────────────────────────────────────────────────────────────────
# If running behind ngrok in Docker, fetch the public URL from ngrok's API
def get_ngrok_url():
    try:
        response = requests.get("http://ngrok:4040/api/tunnels")
        # Debug: print the response text
        print("Response from ngrok API:", response.text)
        data = response.json()
        tunnels = data.get('tunnels', [])
        if tunnels:
            # For simplicity, use the first tunnel's public_url
            return tunnels[0].get('public_url')
        else:
            print("No tunnels found in the response.")
    except Exception as e:
        print("Error fetching ngrok URL:", e)
    return None

# NGROK_URL used to build callbacks and endpoints dynamically
NGROK_URL = get_ngrok_url()
# ──────────────────────────────────────────────────────────────────────────────
# OAuth & Service Endpoints
# ──────────────────────────────────────────────────────────────────────────────
# Construct full URLs based on NGROK_URL
CLIENT_REDIRECT_URL = f"{NGROK_URL}/client/oauth/callback/"
TOKEN_URL = f"{NGROK_URL}/auth/o/token/"
CLIENT_LOGIN_URL = f"{NGROK_URL}/client/oauth_login/"
RESOURCE_URL = f"{NGROK_URL}/resource/api/photos/"
AUTH_SERVER_AUTH = f"{NGROK_URL}/auth/auth"
# Toggle SSL verification for requests
REQUESTS_VERIFY = config("REQUESTS_VERIFY",cast=bool, default=False)


# ──────────────────────────────────────────────────────────────────────────────
# Host & Cookie Settings
# ──────────────────────────────────────────────────────────────────────────────
# Derive allowed host and session cookie domain from ngrok URL
SESSION_COOKIE_DOMAIN = urlparse(NGROK_URL).hostname
ALLOWED_HOSTS = [
    #'127.0.0.1',
    'localhost',
    SESSION_COOKIE_DOMAIN,
]


# ──────────────────────────────────────────────────────────────────────────────
# OAuth Client Credentials
# ──────────────────────────────────────────────────────────────────────────────
# Load from .env for security
OAUTH_CLIENT_ID = config('OAUTH_CLIENT_ID')
OAUTH_CLIENT_SECRET = config('OAUTH_CLIENT_SECRET')


# ──────────────────────────────────────────────────────────────────────────────
# Application Definition
# ──────────────────────────────────────────────────────────────────────────────
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'client_app',
    'django_extensions',
    'sslserver'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'client_service.urls'
# ──────────────────────────────────────────────────────────────────────────────
# Templates
# ──────────────────────────────────────────────────────────────────────────────
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'client_service.wsgi.application'


# ──────────────────────────────────────────────────────────────────────────────
# Database
# ──────────────────────────────────────────────────────────────────────────────
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# ──────────────────────────────────────────────────────────────────────────────
# Password Validation
# ──────────────────────────────────────────────────────────────────────────────

# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# ──────────────────────────────────────────────────────────────────────────────
# Internationalization
# ──────────────────────────────────────────────────────────────────────────────

# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# ──────────────────────────────────────────────────────────────────────────────
# Static Files
# ──────────────────────────────────────────────────────────────────────────────

# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# ──────────────────────────────────────────────────────────────────────────────
# Default Primary Key Field
# ──────────────────────────────────────────────────────────────────────────────

# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SESSION_COOKIE_SAMESITE = None
SESSION_COOKIE_SECURE =  True


# Or if necessary, use 'None' (remember to set SESSION_COOKIE_SECURE=True if you do so)
USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# ──────────────────────────────────────────────────────────────────────────────
# Logging Configuration
# ──────────────────────────────────────────────────────────────────────────────

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
}